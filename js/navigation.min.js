!function(){
    "use strict";
  
    window.kadence = {
      initOutlineToggle: function() {
        document.body.addEventListener("keydown", () => {
          document.body.classList.remove("hide-focus-outline");
        });
  
        document.body.addEventListener("mousedown", () => {
          document.body.classList.add("hide-focus-outline");
        });
      },
  
      getOffset: function(element) {
        if (element instanceof HTMLElement) {
          var rect = element.getBoundingClientRect();
          return { top: rect.top + window.pageYOffset, left: rect.left + window.pageXOffset };
        }
        return { top: null, left: null };
      },
  
      findParents: function(element, selector) {
        var parents = [];
        function findParentsRecursive(node) {
          var parent = node.parentNode;
          if (parent instanceof HTMLElement) {
            if (parent.matches(selector)) {
              parents.push(parent);
            }
            findParentsRecursive(parent);
          }
        }
        findParentsRecursive(element);
        return parents;
      },
  
      toggleAttribute: function(element, attribute, value1, value2) {
        if (value1 === undefined) value1 = true;
        if (value2 === undefined) value2 = false;
  
        if (element.getAttribute(attribute) !== value1) {
          element.setAttribute(attribute, value1);
        } else {
          element.setAttribute(attribute, value2);
        }
      },
  
      initNavToggleSubmenus: function() {
        var elements = document.querySelectorAll(".nav--toggle-sub");
        if (elements.length) {
          for (let i = 0; i < elements.length; i++) {
            window.kadence.initEachNavToggleSubmenu(elements[i]);
            window.kadence.initEachNavToggleSubmenuInside(elements[i]);
          }
        }
      },
  
      initEachNavToggleSubmenu: function(element) {
        var subMenus = element.querySelectorAll(".menu ul");
        if (subMenus.length) {
          for (let i = 0; i < subMenus.length; i++) {
            var parent = subMenus[i].parentNode;
            if (parent.querySelector(".dropdown-nav-toggle")) {
              var title = parent.querySelector(".nav-drop-title-wrap").firstChild.textContent.trim();
              var button = document.createElement("BUTTON");
              button.setAttribute("aria-label", title ? kadenceConfig.screenReader.expandOf + " " + title : kadenceConfig.screenReader.expand);
              button.classList.add("dropdown-nav-special-toggle");
              parent.insertBefore(button, parent.childNodes[1]);
  
              button.addEventListener("click", function(e) {
                e.preventDefault();
                window.kadence.toggleSubMenu(e.target.parentNode);
              });
  
              parent.addEventListener("mouseleave", function(e) {
                window.kadence.toggleSubMenu(e.target, false);
              });
  
              parent.querySelector("a").addEventListener("focus", function(e) {
                var toggledItems = e.target.parentNode.parentNode.querySelectorAll("li.menu-item--toggled-on");
                for (let i = 0; i < toggledItems.length; i++) {
                  window.kadence.toggleSubMenu(toggledItems[i], false);
                }
              });
  
              subMenus[i].addEventListener("keydown", function(e) {
                var focusableElements = "ul.toggle-show > li > a, ul.toggle-show > li > .dropdown-nav-special-toggle";
                if (e.keyCode === 9) { // Tab key
                  if (e.shiftKey) {
                    if (window.kadence.isfirstFocusableElement(subMenus[i], document.activeElement, focusableElements)) {
                      window.kadence.toggleSubMenu(subMenus[i].parentNode, false);
                    }
                  } else {
                    if (window.kadence.islastFocusableElement(subMenus[i], document.activeElement, focusableElements)) {
                      window.kadence.toggleSubMenu(subMenus[i].parentNode, false);
                    }
                  }
                } else if (e.keyCode === 27) { // Escape key
                  window.kadence.toggleSubMenu(subMenus[i].parentNode, false);
                }
              });
  
              parent.classList.add("menu-item--has-toggle");
            }
          }
        }
      },
  
      initEachNavToggleSubmenuInside: function(element) {
        var subMenuItems = element.querySelectorAll(".menu-item-has-children");
        if (subMenuItems.length) {
          for (let i = 0; i < subMenuItems.length; i++) {
            subMenuItems[i].addEventListener("mouseenter", function(e) {
              if (subMenuItems[i].querySelector("ul.sub-menu")) {
                var subMenu = subMenuItems[i].querySelector("ul.sub-menu");
                if (window.kadence.getOffset(subMenu).left + subMenu.offsetWidth <= window.innerWidth) {
                  subMenu.classList.add("sub-menu-edge");
                }
              }
            });
          }
        }
      },
  
      toggleSubMenu: function(element, value) {
        var specialToggle = element.querySelector(".dropdown-nav-special-toggle");
        var subMenu = element.querySelector("ul");
        var isToggledOn = element.classList.contains("menu-item--toggled-on");
        var title = element.querySelector(".nav-drop-title-wrap").firstChild.textContent.trim();
  
        if (value !== undefined && typeof value === "boolean") {
          isToggledOn = !value;
        }
  
        specialToggle.setAttribute("aria-expanded", (!isToggledOn).toString());
  
        if (isToggledOn) {
          element.classList.remove("menu-item--toggled-on");
          subMenu.classList.remove("toggle-show");
          specialToggle.setAttribute("aria-label", title ? kadenceConfig.screenReader.expandOf + " " + title : kadenceConfig.screenReader.expand);
          var toggledItems = element.querySelectorAll(".menu-item--toggled-on");
          for (let i = 0; i < toggledItems.length; i++) {
            window.kadence.toggleSubMenu(toggledItems[i], false);
          }
        } else {
          var parentToggledItems = element.parentNode.querySelectorAll("li.menu-item--toggled-on");
          for (let i = 0; i < parentToggledItems.length; i++) {
            window.kadence.toggleSubMenu(parentToggledItems[i], false);
          }
  
          element.classList.add("menu-item--toggled-on");
          subMenu.classList.add("toggle-show");
          specialToggle.setAttribute("aria-label", title ? kadenceConfig.screenReader.collapseOf + " " + title : kadenceConfig.screenReader.collapse);
        }
      },
  
      isfirstFocusableElement: function(container, currentElement, selector) {
        var focusableElements = container.querySelectorAll(selector);
        return focusableElements.length > 0 && currentElement === focusableElements[0];
      },
  
      islastFocusableElement: function(container, currentElement, selector) {
        var focusableElements = container.querySelectorAll(selector);
        return focusableElements.length > 0 && currentElement === focusableElements[focusableElements.length - 1];
      },
  
      toggleDrawer: function(trigger, setFocus) {
        setFocus = setFocus === undefined ? true : setFocus;
        var targetSelector = trigger.dataset.toggleTarget;
        var drawer = document.querySelector(targetSelector);
        var body = document.body;
        var windowWidth = window.innerWidth;
        var duration = trigger.dataset.toggleDuration ? trigger.dataset.toggleDuration : 250;
  
        window.kadence.toggleAttribute(trigger, "aria-expanded", "true", "false");
  
        if (drawer.classList.contains("show-drawer")) {
          if (trigger.dataset.toggleBodyClass) {
            body.classList.remove(trigger.dataset.toggleBodyClass);
          }
          drawer.classList.remove("active");
          drawer.classList.remove("pop-animated");
          body.classList.remove("kadence-scrollbar-fixer");
  
          setTimeout(function() {
            if (drawer.classList.contains("show-drawer")) {
              var focusElement = trigger.dataset.setFocus;
              if (setFocus && focusElement) {
                var inputElement = document.querySelector(focusElement);
                if (inputElement) {
                  inputElement.focus();
                  if (inputElement.hasAttribute("aria-expanded")) {
                    window.kadence.toggleAttribute(inputElement, "aria-expanded", "true", "false");
                  }
                }
              }
            }
          }, duration);
        } else {
          if (trigger.dataset.toggleBodyClass) {
            body.classList.toggle(trigger.dataset.toggleBodyClass);
            if (trigger.dataset.toggleBodyClass.includes("showing-popup-drawer-")) {
              body.style.setProperty("--scrollbar-offset", window.innerWidth - document.documentElement.clientWidth + "px");
              body.classList.add("kadence-scrollbar-fixer");
            }
          }
  
          setTimeout(function() {
            if (!drawer.classList.contains("show-drawer")) {
              var focusElement = trigger.dataset.setFocus;
              if (setFocus && focusElement) {
                var inputElement = document.querySelector(focusElement);
                if (inputElement) {
                  if (inputElement.hasAttribute("aria-expanded")) {
                    window.kadence.toggleAttribute(inputElement, "aria-expanded", "true", "false");
                  }
                  var inputValue = inputElement.value;
                  inputElement.value = "";
                  inputElement.focus();
                  inputElement.value = inputValue;
                }
              }
            }
          }, 10);
  
          setTimeout(function() {
            drawer.classList.add("pop-animated");
          }, duration);
  
          if (drawer.classList.contains("popup-drawer")) {
            var focusableElements = drawer.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
            var firstElement = focusableElements[0];
            var lastElement = focusableElements[focusableElements.length - 1];
  
            document.addEventListener("keydown", function(e) {
              if (e.key === "Tab" || e.keyCode === 9) {
                if (e.shiftKey) {
                  if (document.activeElement === firstElement) {
                    lastElement.focus();
                    e.preventDefault();
                  }
                } else {
                  if (document.activeElement === lastElement) {
                    firstElement.focus();
                    e.preventDefault();
                  }
                }
              }
            });
          }
        }
      },
  
      initToggleDrawer: function() {
        var toggleTriggers = document.querySelectorAll(".drawer-toggle");
        if (toggleTriggers.length) {
          for (let i = 0; i < toggleTriggers.length; i++) {
            toggleTriggers[i].addEventListener("click", function(event) {
              event.preventDefault();
              window.kadence.toggleDrawer(toggleTriggers[i]);
            });
          }
  
          document.addEventListener("keyup", function(event) {
            if (event.keyCode === 27) { // Escape key
              var activePopupDrawers = document.querySelectorAll(".popup-drawer.show-drawer.active");
              if (activePopupDrawers.length) {
                event.preventDefault();
                activePopupDrawers.forEach(function(drawer) {
                  window.kadence.toggleDrawer(document.querySelector('*[data-toggle-target="' + drawer.dataset.drawerTargetString + '"]'));
                });
              }
            }
          });
  
          document.addEventListener("click", function(event) {
            var target = event.target;
            var overlay = document.querySelector(".show-drawer.active .drawer-overlay");
            if (target === overlay) {
              window.kadence.toggleDrawer(document.querySelector('*[data-toggle-target="' + overlay.dataset.drawerTargetString + '"]'));
            }
  
            var searchDrawerContent = document.querySelector("#search-drawer.show-drawer.active .drawer-content");
            var searchDrawerOverlay = document.querySelector("#search-drawer.show-drawer.active .drawer-overlay");
            if (target === searchDrawerContent) {
              window.kadence.toggleDrawer(document.querySelector('*[data-toggle-target="' + searchDrawerOverlay.dataset.drawerTargetString + '"]'));
            }
          });
        }
      },
  
      // ... Other functions ...
  
      init: function() {
        window.kadence.initNavToggleSubmenus();
        window.kadence.initToggleDrawer();
        window.kadence.initMobileToggleAnchor();
        window.kadence.initMobileToggleSub();
        window.kadence.initOutlineToggle();
        window.kadence.initStickyHeader();
        window.kadence.initStickySidebar();
        window.kadence.initStickySidebarWidget();
        window.kadence.initTransHeaderPadding();
        window.kadence.initAnchorScrollTo();
        window.kadence.initScrollToTop();
      }
    };
  
    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", window.kadence.init);
    } else {
      window.kadence.init();
    }
  }();
  